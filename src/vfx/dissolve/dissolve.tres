[gd_resource type="ShaderMaterial" load_steps=16 format=2]

[ext_resource path="res://src/vfx/dissolve/dissolve_noise.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 0.0, 1, 0.075 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 1.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 1, 0.369141, 0, 1 )

[sub_resource type="VisualShaderNodeScalarUniform" id=6]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeInput" id=7]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 4.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=10]
default_input_values = [ 0, 0.0, 1, 0.025 ]

[sub_resource type="VisualShaderNodeTexture" id=11]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=14]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_7;
uniform float ScalarUniform;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarUniform:15
	float n_out15p0 = ScalarUniform;

// ScalarFunc:4
	float n_out4p0 = sin(n_out15p0);

// ScalarOp:5
	float n_in5p1 = 4.00000;
	float n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:6
	float n_in6p1 = 0.02500;
	float n_out6p0 = n_out5p0 + n_in6p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out6p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// ScalarOp:10
	float n_in10p1 = 0.07500;
	float n_out10p0 = n_out8p0 - n_in10p1;

// ScalarOp:11
	float n_in11p0 = 1.00000;
	float n_out11p0 = n_in11p0 - n_out10p0;

// ScalarFunc:12
	float n_out12p0 = round(n_out11p0);

// Color:14
	vec3 n_out14p0 = vec3(1.000000, 0.369141, 0.000000);
	float n_out14p1 = 1.000000;

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0) * n_out14p0;

// Output:0
	ALPHA = n_out9p0;
	EMISSION = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 21.7349, -195.909 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 1400, 120 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( -280, 100 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -480, 360 )
nodes/fragment/5/node = SubResource( 9 )
nodes/fragment/5/position = Vector2( -280, 360 )
nodes/fragment/6/node = SubResource( 10 )
nodes/fragment/6/position = Vector2( -100, 360 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( -100, 40 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( 120, 260 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( 340, 140 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 340, 380 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 520, 380 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 700, 380 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 1140, 360 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 900, 460 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( -660, 360 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 5, 0, 6, 0, 2, 0, 7, 0, 7, 0, 8, 0, 6, 0, 8, 1, 8, 0, 9, 0, 8, 0, 10, 0, 10, 0, 11, 1, 11, 0, 12, 0, 12, 0, 13, 0, 14, 0, 13, 1, 13, 0, 0, 5, 15, 0, 4, 0, 9, 0, 0, 1 )

[resource]
shader = SubResource( 14 )
shader_param/ScalarUniform = null
